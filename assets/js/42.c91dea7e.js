(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{1044:function(_,v,e){"use strict";e.r(v);var s=e(27),t=Object(s.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h2",{attrs:{id:"redis概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis概述"}},[_._v("#")]),_._v(" Redis概述")]),_._v(" "),s("h3",{attrs:{id:"_1-1-redis简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-redis简介"}},[_._v("#")]),_._v(" 1.1 Redis简介")]),_._v(" "),s("blockquote",[s("p",[s("code",[_._v("Redis")]),_._v("是用C语言开发的一个开源的高性能键值对（"),s("code",[_._v("key-value")]),_._v("）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且"),s("code",[_._v("Redis")]),_._v("通过提供多种键值数据类型来适应不同场景下的存储需求。")])]),_._v(" "),s("h4",{attrs:{id:"_1-1-1-nosql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-nosql"}},[_._v("#")]),_._v(" 1.1.1 NoSQL")]),_._v(" "),s("blockquote",[s("p",[s("code",[_._v("NoSQL")]),_._v("，泛指非关系型数据库。主要是为了解决发规模数据集合多重数据种类带来的挑战，特别是大数据应用难题。")]),_._v(" "),s("ol",[s("li",[_._v("键值存储数据库：就像"),s("code",[_._v("Map")]),_._v("一样的"),s("code",[_._v("key-value")]),_._v("对。典型代表就是"),s("code",[_._v("Redis")]),_._v("。")]),_._v(" "),s("li",[_._v("列存储数据库：关系型数据库是典型的行存储数据库。其存在的问题是，按行存储的数据在物理层面占用的是连续存储空间，不适合海量数据存储。而按列存储则可实现分布式存储，适合海量存储。典型代表就是"),s("code",[_._v("HBase")]),_._v("。")]),_._v(" "),s("li",[_._v("文档型数据库："),s("code",[_._v("NoSQL")]),_._v("与关系型数据的结合，最像关系型数据库的"),s("code",[_._v("NoSQL")]),_._v("。典型代表就是"),s("code",[_._v("MongDB")]),_._v("。")]),_._v(" "),s("li",[_._v("图形数据库（Graph）：用于存储一个节点关系的数据库，例如描述不同人间的关系。典型代表是"),s("code",[_._v("Neo4j")]),_._v("。")])])]),_._v(" "),s("h3",{attrs:{id:"_1-2-redis的用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-redis的用途"}},[_._v("#")]),_._v(" 1.2 Redis的用途")]),_._v(" "),s("blockquote",[s("p",[_._v("Redis在生产中使用最多场景就是做"),s("strong",[_._v("数据缓存")]),_._v("。")])]),_._v(" "),s("p",[s("img",{attrs:{src:e(583),alt:"image-20230417115524597"}})]),_._v(" "),s("blockquote",[s("p",[_._v("即客户端从"),s("code",[_._v("DBMS")]),_._v("中查询出的数据首先写入到"),s("code",[_._v("Redis")]),_._v("中，后续无论哪个客户端需要访问该数据，直接读取"),s("code",[_._v("Redis")]),_._v("中的即可，不仅减小了"),s("code",[_._v("RT")]),_._v("，而且降低了"),s("code",[_._v("DBMS")]),_._v("的压力。")]),_._v(" "),s("p",[_._v("根据"),s("code",[_._v("Redis")]),_._v("缓存的数据与"),s("code",[_._v("DMBS")]),_._v("中数据的同步行划分，缓存一般可分为两类："),s("strong",[_._v("实时同步缓存")]),_._v("，与"),s("strong",[_._v("阶段性同步缓存")]),_._v("。")]),_._v(" "),s("p",[s("strong",[_._v("实时同步缓存")]),_._v("是指，"),s("code",[_._v("DBMS")]),_._v("中数据更新后，"),s("code",[_._v("Redis")]),_._v("缓存中的存放的相关数据会被立即清除，以促使再有对该数据的访问请求到来时，")]),_._v(" "),s("p",[_._v("必须先从"),s("code",[_._v("DBMS")]),_._v("中查询获取到最新数据，然后在写到"),s("code",[_._v("Redis")]),_._v("。")]),_._v(" "),s("p",[s("strong",[_._v("阶段性同步缓存")]),_._v("是指，"),s("code",[_._v("Redis")]),_._v("缓存中的数据允许在一阶段时间内与"),s("code",[_._v("DBMS")]),_._v("中的数据不完全一致。而这个时间段就是这个缓存数据的过期时间。")])]),_._v(" "),s("h3",{attrs:{id:"_1-3-redis-7核心特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-redis-7核心特性"}},[_._v("#")]),_._v(" 1.3 Redis 7核心特性")]),_._v(" "),s("p",[s("img",{attrs:{src:e(584),alt:"image-20230417131005459"}})])])}),[],!1,null,null,null);v.default=t.exports},583:function(_,v,e){_.exports=e.p+"assets/img/image-20230417115524597.cbd6fb9e.png"},584:function(_,v,e){_.exports=e.p+"assets/img/image-20230417131005459.25889067.png"}}]);