(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{936:function(s,t,e){"use strict";e.r(t);var a=e(27),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"_18-b-s系统的会话机制-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-b-s系统的会话机制-session"}},[s._v("#")]),s._v(" 18. B/S系统的会话机制（session）")]),s._v(" "),e("h3",{attrs:{id:"_18-1-什么是会话"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-什么是会话"}},[s._v("#")]),s._v(" 18.1 什么是会话？")]),s._v(" "),e("ul",[e("li",[s._v("用户打开浏览器，进行一系列操作，最终浏览器关闭，这整个过程叫做：一次会话。会话在、服务器端也有一个对应的Java对象：session")]),s._v(" "),e("li",[s._v("什么是一次请求？用户在浏览器上点击了一下，然后页面停下来，可以粗略认为是一次请求，请求对应的服务器的Java对象是：request")]),s._v(" "),e("li",[s._v("一个会话包含多次请求（一次会话对应N次请求）")]),s._v(" "),e("li",[s._v("在Java的Servlet规范中，session对应的类名：HttpSession（Jakarta.servlet.http.HttpSession）")]),s._v(" "),e("li",[s._v("ssession机制属于B/S结构的一部分，如果使用PHP语言开发WEB项目，同样也是有session这种机制的，session机制实际上是一个规范，然后不同的语言对这种机制都有实现")]),s._v(" "),e("li",[s._v("session对象的主要作用是：保存会话状态")])]),s._v(" "),e("h3",{attrs:{id:"_18-2-为什么需要session对象来保存会话状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-为什么需要session对象来保存会话状态"}},[s._v("#")]),s._v(" 18.2 为什么需要session对象来保存会话状态？")]),s._v(" "),e("ul",[e("li",[s._v("因为HTTP协议是一种无状态协议")]),s._v(" "),e("li",[s._v("什么是无状态？请求的时候，B和S是连接的，但是请求结束之后，连接就断开了，为什么这么做？HTTP协议为什么要设计成这样？因为这样的无状态协议，可以降低服务器的压力，请求的瞬间是连接的，请求结束之后，连接断开，这样服务器压力小")]),s._v(" "),e("li",[s._v("只要B和S断开，那儿吗关闭浏览器这个动作，服务器知道吗？不知道，服务器不知道浏览器关闭")]),s._v(" "),e("li",[s._v("张三打开一个浏览器A，李四打开一个浏览器B，访问服务器之后，在服务器端会生成：\n"),e("ul",[e("li",[s._v("张三专属的session对象")]),s._v(" "),e("li",[s._v("李四专属的session对象")])])])]),s._v(" "),e("h3",{attrs:{id:"_18-3-为什么不使用request对象保存会话状态-为什么不使用servletcontext对象保存会话状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-为什么不使用request对象保存会话状态-为什么不使用servletcontext对象保存会话状态"}},[s._v("#")]),s._v(" 18.3 为什么不使用request对象保存会话状态？为什么不使用ServletContext对象保存会话状态？")]),s._v(" "),e("ul",[e("li",[s._v("request.setAttribute()存，request。getAttribute()取，ServletContext也有这个方法，request是请求域，ServletContext是应用域")]),s._v(" "),e("li",[s._v("request是一次请求一个对象")]),s._v(" "),e("li",[s._v("ServletContext对象是服务器启动的时候创建，服务器关闭的时候销毁，这个ServletContext对象只有一个")]),s._v(" "),e("li",[s._v("ServletContext对象的域太大")]),s._v(" "),e("li",[s._v("request请求域（HttpServletRequest）、session会话域（HttpSession）、application域（ServletContext）")]),s._v(" "),e("li",[s._v("request < session < application")])]),s._v(" "),e("h3",{attrs:{id:"_18-4-session对象的实现原理与销毁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-session对象的实现原理与销毁"}},[s._v("#")]),s._v(" 18.4 session对象的实现原理与销毁")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("HttpSession session = request.getSession();")])]),s._v(" "),e("li",[e("p",[s._v("张三访问的时候获取的session对象就是张三的，李四访问的时候获取的session对象就是李四的")])]),s._v(" "),e("li",[e("p",[s._v("JSEEEION=xxxxxxxx（32位）这个是以Cookie的形式保存在浏览器的内存中的，浏览器只要关闭，这个Cookie就没有了")])]),s._v(" "),e("li",[e("p",[s._v("session列表是一个Map集合，map的key是sessionid，map的value是session对象")])]),s._v(" "),e("li",[e("p",[s._v("用户对象第一次请求，服务器生成session对象，同时生成id，将id发送给浏览器")])]),s._v(" "),e("li",[e("p",[s._v("用户第二次请求，自动将浏览器内存中的id发送给服务器，服务器根据id查找session对象")])]),s._v(" "),e("li",[e("p",[s._v("关闭浏览器，内存消失，cookie消失，sessionid消失，会话等同于结束")])]),s._v(" "),e("li",[e("p",[s._v("详情见：D:\\Oak\\docs\\文档")])]),s._v(" "),e("li",[e("p",[s._v("session对象是储存在服务器端的，一个session对象对应一个会话")])]),s._v(" "),e("li",[e("p",[s._v("一次会话中包含多次请求")])]),s._v(" "),e("li",[e("p",[s._v("在WEB服务器中有一个session列表，类似于集合，这个map集合中的key存储的是sessionid，这个map集合的value存储的是对应的session对象")])]),s._v(" "),e("li",[e("p",[s._v("用户发送第一次请求的时候，服务器创建一个新的session对象，同时给session对象生成一个id（通过响应体），然后web服务器将session的id发送到浏览器的缓存中")])]),s._v(" "),e("li",[e("p",[s._v("用户发送第二次请求的时候，会自动将浏览器缓存中的session在请求体中自动发送给服务器，服务器获取到sessionid，然后从session列表查找到对应的session对象")])]),s._v(" "),e("li",[e("p",[s._v("session对象什么时候被销毁？")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("一种销毁：是超时销毁")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("更改tomcat下conf/web.xml文件")]),s._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" 30"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("这个数字的单位是分钟\n更改项目下的web.xml")]),s._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" 30"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("这个数字的单位是分钟\n在项目中通过代码设置过期时间\n调用session对象的setMaxInactiveInterval(1800)方法来设置\n参数单位是秒，如果设置-1，则session永久有效")])])])]),s._v(" "),e("li",[e("p",[s._v("一种销毁：是手动销毁")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[s._v("session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("invalidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[s._v("浏览器关闭的时候，服务器是不知道的，服务器无法监测到浏览器关闭了，所以session的销毁要依靠session超时机制，但也有一种可能，系统提供了“安全退出”，用户可以点击这个按钮，这样服务器就知道你退出了，然后服务器会自动销毁session对象")])])])])]),s._v(" "),e("h3",{attrs:{id:"_18-5-session怎么获取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-session怎么获取"}},[s._v("#")]),s._v(" 18.5 Session怎么获取？")]),s._v(" "),e("ul",[e("li",[s._v("HttpSession session = request.getSession(); 从服务器中获取当前session对象，如果没有获取到任何对象，则新建")]),s._v(" "),e("li",[s._v("HttpSession session request.getSession(false);，从服务器中获取当前session对象，如果没有，则不会创建，返回一个null")])]),s._v(" "),e("h3",{attrs:{id:"_18-6-cookie能否被禁用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-6-cookie能否被禁用"}},[s._v("#")]),s._v(" 18.6 Cookie能否被禁用?")]),s._v(" "),e("ul",[e("li",[s._v("cookie禁用是什么意思呢？服务器正常发送cookie给浏览器，但是浏览器不要了，拒收了。并不是浏览器不发了")]),s._v(" "),e("li",[s._v("找不到，每一次请求都会获取到新的session对象")]),s._v(" "),e("li",[s._v("cookie禁用了，session机制还能实现吗？\n"),e("ul",[e("li",[s._v("可以，需要使用URL重写机制")]),s._v(" "),e("li",[s._v("http://localhost:8080/servlet/test/session;jsessionid=19D1C99560DCBF839FA43D58F56E16")]),s._v(" "),e("li",[s._v("URL重写机制会提高开发者的成本，开发者在编写任何请求路径的时候，后面都要添加一个sessionid，给开发带来了很大的难度，很大的成本，所以大部分的网站都是这样设计的：你要是禁用了cookie，你就别用了")])])])]),s._v(" "),e("h3",{attrs:{id:"_18-7-总结目前的域对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-7-总结目前的域对象"}},[s._v("#")]),s._v(" 18.7 总结目前的域对象")]),s._v(" "),e("ul",[e("li",[s._v("request（对应类名：HttpServletRequest）--------------\x3e请求域")]),s._v(" "),e("li",[s._v("session（对应的类名：HttpSession）-------------------\x3e会话域")]),s._v(" "),e("li",[s._v("application（对应的类名：ServletContext）-----------------\x3e应用域（所有用户共享）")]),s._v(" "),e("li",[s._v("域对象的大小关系：request < session < application")]),s._v(" "),e("li",[s._v("使用原则：尽量使用域小的")]),s._v(" "),e("li",[s._v("三个域中的操作域 的方法\n"),e("ul",[e("li",[s._v("setAttribute()")]),s._v(" "),e("li",[s._v("getAttribute()")]),s._v(" "),e("li",[s._v("removeAttribute()")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);