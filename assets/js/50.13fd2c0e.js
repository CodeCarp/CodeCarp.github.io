(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{451:function(r,i,n){r.exports=n.p+"assets/img/Spring8module.75a2e6b0.png"},941:function(r,i,n){"use strict";n.r(i);var t=n(27),_=Object(t.a)({},(function(){var r=this,i=r.$createElement,t=r._self._c||i;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h2",{attrs:{id:"_2、spring概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、spring概述"}},[r._v("#")]),r._v(" 2、Spring概述")]),r._v(" "),t("h3",{attrs:{id:"_2-1-spring简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-spring简介"}},[r._v("#")]),r._v(" 2.1 Spring简介")]),r._v(" "),t("ul",[t("li",[r._v("Spring是一个轻量级的控制反转和面向切面编程的框架")]),r._v(" "),t("li",[r._v("Spring最初是为了解决EJB臃肿的设计及难以测试的问题")])]),r._v(" "),t("h3",{attrs:{id:"_2-2-spring8大模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-spring8大模块"}},[r._v("#")]),r._v(" 2.2 Spring8大模块")]),r._v(" "),t("p",[t("img",{attrs:{src:n(451),alt:"Spring8大模块"}})]),r._v(" "),t("h4",{attrs:{id:"_2-2-1-spring-core模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-spring-core模块"}},[r._v("#")]),r._v(" 2.2.1 Spring Core模块")]),r._v(" "),t("ul",[t("li",[r._v("这是Spring框架最基础的部分，它提供了依赖注入特征来实现容器对Bean的管理")]),r._v(" "),t("li",[r._v("核心容器的主要组件是BeanFactory，BeanFactory是工厂模式的一个实现，是任何Spring应用的核心")]),r._v(" "),t("li",[r._v("他使用IOC将应用配置和依赖从实际的应用代码中分离出来")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-2-spring-context模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-spring-context模块"}},[r._v("#")]),r._v(" 2.2.2 Spring Context模块")]),r._v(" "),t("ul",[t("li",[r._v("如果说核心模块中的BeanFactory使用Spring成为容器的话，那么上下文模块就是Spring成为框架的原因")]),r._v(" "),t("li",[r._v("这个模块扩展了BeanFactory，增加了对国际化消息，事件传播，验证的支持")]),r._v(" "),t("li",[r._v("另外提供了许多企业服务，例如电子邮件，JDN访问，EJB集成，远程以及时序调度服务")]),r._v(" "),t("li",[r._v("也包括了对模板框架例如Velocity和FreeMarker集成的支持")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-3-spring-aop模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-spring-aop模块"}},[r._v("#")]),r._v(" 2.2.3 Spring AOP模块")]),r._v(" "),t("ul",[t("li",[r._v("Spring在他的AOP模块中提供了对面向切面编程的丰富支持，Spring AOP模块为基于Spring的应用程序中的对象提供了事务管理服务")]),r._v(" "),t("li",[r._v("通过使用Spring AOP，不用依赖组件，就可以将声明性事务管理集成到应用程序中，可以自定义拦截器，切点，日志等操作")])]),r._v(" "),t("p",[r._v("####2.2.4 Spring DAO模块")]),r._v(" "),t("ul",[t("li",[r._v("提供了一个JDBC的抽象层和一出那个层次结构，消除了繁琐的JDBC编码的数据库厂商特有的错误代码解析，用于简化JDBC")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-5-spring-orm模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-spring-orm模块"}},[r._v("#")]),r._v(" 2.2.5 Spring ORM模块")]),r._v(" "),t("ul",[t("li",[r._v("Spring提供ORM模块，Spring并不试图实现自己的ORM解决方案，而是为了几种流行的ORM框架提供了集成方案。")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-6-spring-web-mvc模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-spring-web-mvc模块"}},[r._v("#")]),r._v(" 2.2.6 Spring Web MVC模块")]),r._v(" "),t("ul",[t("li",[r._v("Spring为构建web应用提供了一个功能全面的MVC框架")]),r._v(" "),t("li",[r._v("虽然Spring可以很容易地狱其他MVC框架集成但是SpringMVC框架使用IOC对控制逻辑和业务对象提供了完全的分离")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-7-spring-webflux模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-spring-webflux模块"}},[r._v("#")]),r._v(" 2.2.7 Spring WebFlux模块")]),r._v(" "),t("ul",[t("li",[r._v("Spring Framework中包含原始Web框架Spring Web MVC是专门为了Servlet API和Servlet容器够贱的")]),r._v(" "),t("li",[r._v("反应式堆栈 Web 框架 Spring WebFlux 是在 5.0 版的后期添加的。它是完全非阻塞的，支持反应式流(Reactive Stream)背压，并在Netty，Undertow和Servlet 3.1+容器等服务器上运行。")])]),r._v(" "),t("h4",{attrs:{id:"_2-2-8-spring-web模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-spring-web模块"}},[r._v("#")]),r._v(" 2.2.8 Spring Web模块")]),r._v(" "),t("ul",[t("li",[r._v("Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文，提供了Spring和其它Web框架的集成，比如Struts、WebWork。")]),r._v(" "),t("li",[r._v("还提供了一些面向服务支持，例如：实现文件上传的multipart请求。")])]),r._v(" "),t("h3",{attrs:{id:"_2-3-spring特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-spring特点"}},[r._v("#")]),r._v(" 2.3 Spring特点")]),r._v(" "),t("ul",[t("li",[r._v("轻量\n"),t("ul",[t("li",[r._v("从大小与开销两方面而言Spring都是轻量的。\n"),t("ul",[t("li",[r._v("完整的Spring框架可以在一个大小只有1MB多的JAR文件里发布。")]),r._v(" "),t("li",[r._v("并且Spring所需的处理开销也是微不足道的。")])])]),r._v(" "),t("li",[r._v("Spring是非侵入式的：Spring应用中的对象不依赖于Spring的特定类。")])])]),r._v(" "),t("li",[r._v("控制反转\n"),t("ul",[t("li",[r._v("Spring通过一种称作控制反转（IoC）的技术促进了松耦合。\n当应用了IoC，一个对象依赖的其它对象会通过被动的方式传递进来，而不是这个对象自己创建或者查找依赖对象。\n你可以认为IoC与JNDI相反——不是对象从容器中查找依赖，而是容器在对象初始化时不等对象请求就主动将依赖传递给它。")])])]),r._v(" "),t("li",[r._v("面向切面\n"),t("ul",[t("li",[r._v("Spring提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑与系统级服务（例如审计（auditing）和事务（transaction）管理）进行内聚性的开发。\n应用对象只实现它们应该做的——完成业务逻辑——仅此而已。\n它们并不负责（甚至是意识）其它的系统级关注点，例如日志或事务支持。")])])]),r._v(" "),t("li",[r._v("容器\n"),t("ul",[t("li",[r._v("Spring包含并管理应用对象的配置和生命周期，在这个意义上它是一种容器.\n你可以配置你的每个bean如何被创建——基于一个可配置原型（prototype），你的bean可以创建一个单独的实例或者每次需要时都生成一个新的实例——以及它们是如何相互关联的。\n然而，Spring不应该被混同于传统的重量级的EJB容器，它们经常是庞大与笨重的，难以使用。")])])]),r._v(" "),t("li",[r._v("框架\n"),t("ul",[t("li",[r._v("Spring可以将简单的组件配置、组合成为复杂的应用。\n"),t("ul",[t("li",[r._v("在Spring中，应用对象被声明式地组合，典型地是在一个XML文件里。")]),r._v(" "),t("li",[r._v("Spring也提供了很多基础功能（事务管理、持久化框架集成等等），将应用逻辑的开发留给了你。")])])])])])])])}),[],!1,null,null,null);i.default=_.exports}}]);