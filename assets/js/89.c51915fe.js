(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{935:function(a,s,t){"use strict";t.r(s);var e=t(27),v=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"_20-jsp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-jsp"}},[a._v("#")]),a._v(" 20. JSP")]),a._v(" "),t("h3",{attrs:{id:"_20-1-第一个jsp程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-第一个jsp程序"}},[a._v("#")]),a._v(" 20.1 第一个JSP程序")]),a._v(" "),t("ul",[t("li",[a._v("在WEB-INF目录同级创建一个index.jsp文件。")]),a._v(" "),t("li",[a._v("访问以上这个：index.jsp，底层执行的是：index_jsp.class这个Java程序")]),a._v(" "),t("li",[a._v("这个index.jsp会被Tomcat翻译成index.java文件，然后Tomcat服务器又会将index_jsp.java翻译生成index_jsp.class文件")]),a._v(" "),t("li",[a._v("访问这个index.jsp，实际上执行的是index_jsp.class中的方法")])]),a._v(" "),t("h3",{attrs:{id:"_20-2-jsp的实质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-jsp的实质"}},[a._v("#")]),a._v(" 20.2 JSP的实质")]),a._v(" "),t("ul",[t("li",[a._v("JSP实际上就是一个Servlet")]),a._v(" "),t("li",[a._v("index.jsp访问的时候，会自动编译生成index_jsp.java，会自动编译生成index.jsp.class，那么index.jsp这就是一个类")]),a._v(" "),t("li",[a._v("index.jsp类继承HttpJspBase，而HTTPJSPBase类继承的是HtpServlet。所以index/_jsp类就是一个Servlet类")]),a._v(" "),t("li",[a._v("jsp的生命周期和Servlet的生命周期完全相同，完全就是一个东西，没有任何区别")]),a._v(" "),t("li",[a._v("jsp和Servlet一样，都是单例的（假单例）")])]),a._v(" "),t("h3",{attrs:{id:"_20-3-jsp第一次访问比较慢的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-jsp第一次访问比较慢的原因"}},[a._v("#")]),a._v(" 20.3 JSP第一次访问比较慢的原因")]),a._v(" "),t("ul",[t("li",[a._v("大部分运维人员在给客户演示项目的时候，会提前把所有的jsp文件先访问一遍")]),a._v(" "),t("li",[a._v("第一次访问比较麻烦：\n"),t("ul",[t("li",[a._v("要把jsp文件翻译成java源文件")]),a._v(" "),t("li",[a._v("java源文件要编译生成class字节码文件")]),a._v(" "),t("li",[a._v("然后通过class去创建servlet对象")]),a._v(" "),t("li",[a._v("然后调用servlet对象init方法")]),a._v(" "),t("li",[a._v("最后调用servlet对象的service方法")])])]),a._v(" "),t("li",[a._v("第二次比较快的原因：\n"),t("ul",[t("li",[a._v("因为第二次直接调用单例servlet对象的service方法即可")])])])]),a._v(" "),t("h3",{attrs:{id:"_20-4-jsp是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-4-jsp是什么"}},[a._v("#")]),a._v(" 20.4 JSP是什么？")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("JSP是Java程序。（JSP本质还是一个Servlet）")])]),a._v(" "),t("li",[t("p",[a._v("JSP是JavaServlet Pages的缩写。（基于Java语言实现的服务器的页面）")])]),a._v(" "),t("li",[t("p",[a._v("Servlet是JavaEE的13个子规范之一，那么JSP也是JavaEE的13个子规范之一")])]),a._v(" "),t("li",[t("p",[a._v("JSP是一套规范，所有的WEB容器WEB服务器都是遵循这套规范的，都是按照这套规范进行的“翻译”")])]),a._v(" "),t("li",[t("p",[a._v("每一个WEB容器*WEB服务器都会内置一个JSP翻译引擎")])]),a._v(" "),t("li",[t("p",[a._v("对JSP进行错误调试的时候，还是要直接打开JSP文件对应的java文件，检查java代码")])]),a._v(" "),t("li",[t("p",[a._v("JSP既然本质上是一个Servlet，那么JSP和Servlet到底有什么区别？")]),a._v(" "),t("ul",[t("li",[a._v("职责不同：\n"),t("ul",[t("li",[a._v("Servlet的职责是：收集数据（Servlet的强项是逻辑处理，业务处理，然后连接数据库，获取/收集数据）")]),a._v(" "),t("li",[a._v("JSP的职责是：展示数据（JSP的强项是做数据的展示）")])])])])]),a._v(" "),t("li",[t("p",[a._v("JSP文件的扩展名必须是xxx.jsp吗？")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("JSP文件的扩展名是可以配置的，不是固定的")])]),a._v(" "),t("li",[t("p",[a._v("在CATALINA_HOME/conf/web.xml，在这个文件中配置jsp文件的扩展名")])]),a._v(" "),t("li",[t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("servlet-mapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("servlet-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("jsp"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("servlet-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("url-pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("*.jsp"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("url-pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("url-pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("*.jspx"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("url-pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("servlet-mapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])])])])])]),a._v(" "),t("h3",{attrs:{id:"_20-5-jsp的基础语法初步概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-5-jsp的基础语法初步概述"}},[a._v("#")]),a._v(" 20.5 JSP的基础语法初步概述")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在JSP文件中直接编写文字，都会自动翻译到哪里？")]),a._v(" "),t("ul",[t("li",[a._v('翻译到Servlet类的service方法的out.writer("翻译到这里")，被java程序当做普通字符串打印输出到浏览器')]),a._v(" "),t("li",[a._v("在JSP中编写的HTML CSS JS 代码，这些代码对于JSP来说只是一个普通的字符串，但是JSP把这个普通的字符串一旦输出到浏览器，浏览器就会对其进行解释执行，展示一个效果")])])]),a._v(" "),t("li",[t("p",[a._v("JSP的page指令，解决响应时的乱码问题")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("通过page指令来设置响应的内容类型，在内容类型的最后添加：charset=UTF-8")])]),a._v(" "),t("li",[t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@page")]),a._v(" contentType"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text/html;charset=UTF-8"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 表示响应的内容类型是text/html，采用的字符集是UTF-8")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])]),a._v(" "),t("li",[t("p",[a._v("page指令的属性：")]),a._v(" "),t("ul",[t("li",[a._v("pageEncoding属性：指定当前JSP页面的编码")]),a._v(" "),t("li",[a._v("contentType属性：设置响应字符流编码")])])]),a._v(" "),t("li",[t("p",[a._v("无论是pageEncoding还是contentType，他们的默认值都是ISO-8859-1，是无法显示中文的，所以JSP页面中存在中文的话，一定要设置这两个属性")])]),a._v(" "),t("li",[t("p",[a._v("两者关系：当pageEncoding和contentType只出现一个时，那么另一个的值一之相同")])]),a._v(" "),t("li",[t("p",[a._v("当两个都不出现时，那么两个属性值都是ISO-8859-1")]),a._v(" "),t("ul",[t("li",[a._v("import属性：对应java代码中的import语句，导包")])])])])]),a._v(" "),t("li",[t("p",[a._v("在JSP中编写Java程序")]),a._v(" "),t("ul",[t("li",[a._v("<% java语句；%>")]),a._v(" "),t("li",[a._v("在这个符号中编写的java程序，被翻译到Servlet类的service方法内部")]),a._v(" "),t("li",[a._v("在<% %>符号里面写java代码的时，就是在方法体里边写代码")]),a._v(" "),t("li",[a._v("在service方法中编写的代码是有顺序的，方法体中的代码要遵循自上而下的顺序一次逐行执行")]),a._v(" "),t("li",[a._v("service方法中不能写静态代码块，不能写方法，不能定义成员变量...........")]),a._v(" "),t("li",[a._v("在同一个JSP中<% %>符号可以出现多个")])])]),a._v(" "),t("li",[t("p",[a._v("符号<%! %>")]),a._v(" "),t("ul",[t("li",[a._v("在该符号中编写java程序会自动翻译到service方法之外")])])]),a._v(" "),t("li",[t("p",[a._v("在jsp中编写JSP 的专业注释")]),a._v(" "),t("ul",[t("li",[a._v("<%--  JSP的专业注释，不会被翻译到java源代码中--%>")]),a._v(" "),t("li")])]),a._v(" "),t("li",[t("p",[a._v("JSP的输出语句")]),a._v(" "),t("ul",[t("li",[a._v("怎么向浏览器上输出一个java变量")]),a._v(" "),t("li",[a._v('<% String name = "jack"; out.writer("name = " + name); %>')]),a._v(" "),t("li",[a._v("注意：以上代码中的out是JSP的九大内置对象之一，可以会直接拿来用，当然只能在service方法内部使用")]),a._v(" "),t("li",[a._v("如果向浏览器上输出的内容中没有“java代码”,例如直接输出一个固定的字符串，可以直接在jsp中编写，不用写在<%%>里面")]),a._v(" "),t("li",[a._v("如果输出的内容里边含有“java代码”，这个时候可以使用语法格式为：\n"),t("ul",[t("li",[a._v("<%= %>注意：在=的后面编写要输出的内容")]),a._v(" "),t("li",[a._v("<%= %>这个符号被翻译到哪里？翻译成什么？out.print();，并翻译到service方法中")]),a._v(" "),t("li",[a._v("什么时候使用<% =%>输出？输出的内容中含有java变量，输出的内容是一个动态的内容")])])])])])]),a._v(" "),t("h3",{attrs:{id:"_20-6-jsp基础语法总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-6-jsp基础语法总结"}},[a._v("#")]),a._v(" 20.6 JSP基础语法总结")]),a._v(" "),t("ul",[t("li",[a._v('JSP中直接编写普通字符串-----\x3e翻译到service方法的out.print("普通字符串");')]),a._v(" "),t("li",[a._v("<%%>------\x3e翻译到service方法体内部，里边是一条条的java语句")]),a._v(" "),t("li",[a._v("<%! %>------\x3e翻译到service方法之外")]),a._v(" "),t("li",[a._v("<%= %>------\x3e翻译到service方法体内部，翻译为：lout.pront();")]),a._v(" "),t("li",[a._v('<%@page contentType="text/html;charset=UTF-8"%>------\x3epage指令，，通过contentType属性设置响应的类型')]),a._v(" "),t("li",[a._v("JSP  <------\x3eJava")])]),a._v(" "),t("h3",{attrs:{id:"_20-7-jsp的指令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-7-jsp的指令详解"}},[a._v("#")]),a._v(" 20.7 JSP的指令详解")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("指令的作用：指导JSP的翻译引擎如何工作（指导当前的JSP翻译引擎如何翻译JSP文件）")])]),a._v(" "),t("li",[t("p",[a._v("指令包括哪些呢？")]),a._v(" "),t("ul",[t("li",[a._v("include指令：包含指令，在JSP中完成静态包含")]),a._v(" "),t("li",[a._v("taglib指令：引入标签库的指令（比如：引入JSTL标签库）")]),a._v(" "),t("li",[a._v("page指令：目前重点学习的指令")])])]),a._v(" "),t("li",[t("p",[a._v("指令使用语法是什么？")]),a._v(" "),t("ul",[t("li",[a._v("<%@指令名 属性名=属性值 属性名=属性值 属性名=属性值 ......%>")])])]),a._v(" "),t("li",[t("p",[a._v("page指令的常用属性：")]),a._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page session="true|false" %>\ntrue表示启用JSP的内置对象session，表示一定启动session对象，没有session对象会创建\n默认值就是session=“true"\nfalse表示不启动内置对象session，当前JSP页面中无法使用内置对象session\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])])]),a._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page contentype="text/json" %>\ncontentType属性用来设置响应的内容类型\n但同时也设置字符集\n<%@page contentType="text/html;charset=UTF-8"%>\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])])]),a._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page pageEncoding="UTF-8" %>\npageEncoding="UTF-8"表示响应时采用的字符集\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])])]),a._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page import="java.util.List,java.util.Date,java.util.Arraylist"%>\nimport语句，导包\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])])]),a._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page errorPage="/errror.jsp" %>\n当前页面出现异常之后，跳转到error.jsp页面\nerrorPage属性用来指定出错后的跳转位置\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])])]),a._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<%@page isErrorPage="true" %>\n表示启用JSP就大内置对象之一：exception，默认值是false\n\n在页面内可以通过java代码将错误输出到服务端\n<%\n\texception.printStackException();\n%>\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])])])])])]),a._v(" "),t("h3",{attrs:{id:"_20-8-就大内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-8-就大内置对象"}},[a._v("#")]),a._v(" 20.8 就大内置对象")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("四大作用域：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("jakarta.servlet.jsp.PageContext pageContext 页面作用域")])]),a._v(" "),t("li",[t("p",[a._v("jakarta.setvlet.http.HttpServletRequest request 请求作用域")])]),a._v(" "),t("li",[t("p",[a._v("jakarta.setvlet.http.HttpSession session 会话作用域")])]),a._v(" "),t("li",[t("p",[a._v("jakarta.setvlet.ServletContext application 应用作用域")]),a._v(" "),t("ul",[t("li",[a._v("pageContext < request < session < application")]),a._v(" "),t("li",[a._v("四个作用域都有操作域的三个方法：setAttribute、getAttribute、removeAttribute")]),a._v(" "),t("li",[a._v("使用原则：尽可能使用小的域")])])])])]),a._v(" "),t("li",[t("p",[a._v("异常：")]),a._v(" "),t("ul",[t("li",[a._v("java.lang.Throwable exception")])])]),a._v(" "),t("li",[t("p",[a._v("配置：")]),a._v(" "),t("ul",[t("li",[a._v("Jakarta.servlet.ServletConfig config")])])]),a._v(" "),t("li",[t("p",[a._v("this：")]),a._v(" "),t("ul",[t("li",[a._v("java.lang.Object page  （其实就是this对象，当前的servlet对象）")])])]),a._v(" "),t("li",[t("p",[a._v("负责输出：")]),a._v(" "),t("ul",[t("li",[a._v("jakarta.servlet.jsp.JspWriter out （负责输出）")]),a._v(" "),t("li",[a._v("jakarta.servlet.http.HttpServletResponse response（负责响应）")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);