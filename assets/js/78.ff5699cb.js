(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{929:function(t,s,a){"use strict";a.r(s);var e=a(27),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_9-servletcontext接口详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-servletcontext接口详解"}},[t._v("#")]),t._v(" 9. ServletContext接口详解")]),t._v(" "),a("h3",{attrs:{id:"_9-1-什么是servletcontext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-什么是servletcontext"}},[t._v("#")]),t._v(" 9.1 什么是ServletContext？")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("ServletContext是接口，是Servlet规范中的一员。")])]),t._v(" "),a("h3",{attrs:{id:"_9-2-servletcontext是谁实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-servletcontext是谁实现的"}},[t._v("#")]),t._v(" 9.2 ServletContext是谁实现的？")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("Tomcat服务器（WEB服务器）实现类ServletContext接口。")]),t._v(" "),a("li",[t._v("public class org.apache.catalina.core.ApplicationContextFacade implements ServletContext{}")])]),t._v(" "),a("h3",{attrs:{id:"_9-3-servletcontext对象是谁创建的-在什么时候创建的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-servletcontext对象是谁创建的-在什么时候创建的"}},[t._v("#")]),t._v(" 9.3 ServletContext对象是谁创建的？在什么时候创建的？")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("ServletContext对象是WEB服务器启动时创建的")]),t._v(" "),a("li",[t._v("ServletContext对象是WEB服务器创建的")]),t._v(" "),a("li",[t._v("对于一个webapp来说，ServletContext对象只有一个")]),t._v(" "),a("li",[t._v("ServletContext对象在WEB服务器关闭时销毁")])]),t._v(" "),a("h3",{attrs:{id:"_9-4-servletcontext怎么理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-servletcontext怎么理解"}},[t._v("#")]),t._v(" 9.4 ServletContext怎么理解？")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("ServletContext可以理解为：Servlet对象的环境对象（Servlet对象的上下文对象）")]),t._v(" "),a("li",[t._v("ServletContext对象其实对应的就是 整个web.xml文件。是一个应用级对象。")]),t._v(" "),a("li",[t._v("50个学生，每个学生都是一个Servlet，这50个学生都在一个教室，那么这个教室就相当于ServletContext对象。放在ServletContext对象中的数据，所有Servlet一定是共享的。\n"),a("ul",[a("li",[t._v("比如：一个教室的空调是所有学生共享的。")])])]),t._v(" "),a("li",[t._v("Tomcat是一个容器，一个容器最后那个可以放多个webapp。一个webapp对应一个ServletContext对象。")])]),t._v(" "),a("h3",{attrs:{id:"_9-5-servletcontext中的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-servletcontext中的常用方法"}},[t._v("#")]),t._v(" 9.5 ServletContext中的常用方法")]),t._v(" "),a("hr"),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.通过初始化参数的name属性获取value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInitParameter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.获取所有的初始化参数的name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enumeration")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInitParameterName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.以上两个方法时ServletContext对象的方法，这个方法获取的是什么信息？是以下的配置信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("pageSize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：以上配置的信息属于应用级的配置信息，一般一个项目中所有Servlet共享的配置信息会放到以上标签中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果你的配置信息只是想给某一个Servlet作为参考，那么你配置到Servlet当中即可，使用ServletConfig对象来获取")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.获取应用得根路径，因为在java源代码总有一些地方有可能会需要应用得根路径，这个方法可以动态获取应用得根路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在java源码中不要将应用得根路径写死，因为你永远不知道这个应用最终部署的时候，起一个什么名字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" contextPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" contextPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.获取文件的绝对路径（真是路径）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRealPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.通过ServletContext对象也是可以记录日志的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个异常不会影响服务器运行，只会在日志中显示该异常")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("h3",{attrs:{id:"_9-6-servletcontext对象-应用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-servletcontext对象-应用域"}},[t._v("#")]),t._v(" 9.6 ServletContext对象 == 应用域")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("如果所有的用户共享一份数据，并且这个数据很少的被修改，并且这个数据量很少，可以将这些数据放到ServletContext这个应用域中；")]),t._v(" "),a("li",[t._v("为什么是所有用户共享的数据？不是共享的数据没有意义，因为ServletContext这个对象只有一个，只有共享数据放进去才有意义；")]),t._v(" "),a("li",[t._v("为什么数据量要小？因为数据量大的话，太占用堆内存，并且这个对象的生命周期比较长，服务器关闭的时候，这个对象才被销毁，大量数据会影响服务器行性能，占用内存较小的数据量可以考虑放进去；")]),t._v(" "),a("li",[t._v("为什么这些共享数据很少修改、或者说根本不修改？\n"),a("ul",[a("li",[t._v("所有用户共享的数据，如果设计到修改操作，必然存在线程并发带来的安全问题，所以放在ServletContext对象的数据一般都是只读的")])])]),t._v(" "),a("li",[t._v("数据量小，所有用户共享，又不修改，这样的数据放到ServletContext这个应用域中，会大大提升效率，因为应用域相当于一个缓存，放到缓存中的数据，下次再用的时候，不需要从数据库中再次获取，大大提升执行效率。")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 怎么向ServletContext应用域中**存数据**")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map.put(k,v)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 怎么从ServletContext应用域中**取数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object v = map.get(k)**")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 怎么**删除ServletContext应用域中的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map.remove(k)**")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[t._v("注意：我们以后编写Servlet类的时候。实际上是不会直接继承GenericServlet类的，因为我们是B/S结构的系统，这种系统是基于HTTP超文本传输协议的，在Servlet规范中，提供一个类叫做HTTPServlet、他专门为HTTP协议准备了一个Servlet类，我们编写的Servlet类要继承HTTPServlet（HTTPServlet是HTTP协议专用的）使用HttpServlet处理HTTP协议更便捷，但是你需要知道他的继承结构：")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jakarta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Servlet（接口）【爷爷】\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("jakarta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("GenericServlet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Servlet")]),t._v("（抽象类）【儿子】\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jakarta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HttpServlet "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericServlet")]),t._v("（抽象类）【孙子】\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们以后编写的类要继承HttpServlet类。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_9-7-目前接触过的缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-目前接触过的缓存机制"}},[t._v("#")]),t._v(" 9.7 目前接触过的缓存机制")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("堆内存当中的字符串常量池\n"),a("ul",[a("li",[t._v("“abc”先在字符串常量池中查找，如果有，直接拿来用，如果没有则新建，然后放入字符串常量池。")])])]),t._v(" "),a("li",[t._v("堆内存当中的整数型常量池\n"),a("ul",[a("li",[t._v("[-128~127]一共256个Integer类型的引用，放在整数型常量池中，没有超出这个范围的话，直接从常量池中取")])])]),t._v(" "),a("li",[t._v("连接池\n"),a("ul",[a("li",[t._v("这里所说的连接池中的连接是java语言连接数据库的对象：java.sql.Connection对象。")]),t._v(" "),a("li",[t._v("JVM是一个进程，MySQL数据库是一个进程，进程和进程之间建立连接，打开通道是很费劲的，是很耗费资源的，怎么办？可以提前先创建好N个Connection连接对象，将连接对象放到一个集合中，我们把这个放有Connection对象的集合称为连接池。每一次用户连接的时候不需要再新创建连接对象，神省去了新建的环节，直接从连接池中获取连接对象，大大提升了访问效率。")]),t._v(" "),a("li",[t._v("连接池\n"),a("ul",[a("li",[t._v("最小连接数")]),t._v(" "),a("li",[t._v("最大连接数")]),t._v(" "),a("li",[t._v("连接池可以提高用户的访问效率，保证数据库的安全性")])])])])]),t._v(" "),a("li",[t._v("线程池\n"),a("ul",[a("li",[t._v("Tomcat服务器本身就是支持多线程的")]),t._v(" "),a("li",[t._v("Tomcat服务器是在用户发送第一次请求，就新建一个Thread线程对象吗？\n"),a("ul",[a("li",[t._v("当然不是。实际上实在Tomcat服务器启动时，会先创建好N个线程Thread对象，然后将线程对象放到集合中，称为线程池，用户发送请求过来后，需要一个对应的线程来处理这个请求，这个时候线程对象就会直接从线程池中拿，效率比较高。")]),t._v(" "),a("li",[t._v("所有的WEB服务器，或应用服务器都是支持多线程的，都有线程池机制")])])])])]),t._v(" "),a("li",[t._v("redis\n"),a("ul",[a("li",[t._v("NoSQL数据库，非关系型数据库。缓存数据库。")])])]),t._v(" "),a("li",[t._v("向ServletContext应用域中存储数据，也就等于试讲数据存放到缓存cache中")])])])}),[],!1,null,null,null);s.default=n.exports}}]);