(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{1049:function(e,t,_){"use strict";_.r(t);var i=_(27),v=Object(i.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h2",{attrs:{id:"redis管道"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#redis管道"}},[e._v("#")]),e._v(" Redis管道")]),e._v(" "),i("h3",{attrs:{id:"_6-1-什么是管道"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-什么是管道"}},[e._v("#")]),e._v(" 6.1 什么是管道")]),e._v(" "),i("blockquote",[i("p",[i("strong",[e._v("面试题：如何优化频繁命令往造成的性能瓶颈？")])]),e._v(" "),i("p",[e._v("管道：可以一次性发送多条命令给服务端，服务端依次处理完毕后，"),i("strong",[e._v("通过一条响应一次性将结果返回，通过减少客户端和redis的通信次数来实现降低往返时延时间")]),e._v("。"),i("code",[e._v("pipcline")]),e._v("实现的原理是队列，先进先出特性就是保证数据的顺序性。")])]),e._v(" "),i("h3",{attrs:{id:"_6-2-管道使用演示"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-管道使用演示"}},[e._v("#")]),e._v(" 6.2 管道使用演示")]),e._v(" "),i("p",[i("img",{attrs:{src:_(596),alt:"image-20230424181840056"}})]),e._v(" "),i("h3",{attrs:{id:"_6-3-pipeline与原生批量命令对比"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-pipeline与原生批量命令对比"}},[e._v("#")]),e._v(" 6.3 Pipeline与原生批量命令对比")]),e._v(" "),i("blockquote",[i("p",[e._v("原生批量命令是原子性（例如："),i("code",[e._v("mset")]),e._v("、"),i("code",[e._v("mget")]),e._v("），"),i("code",[e._v("pipeline")]),e._v("是非原子性。")]),e._v(" "),i("p",[e._v("原生批量命令一次只能执行一种命令，"),i("code",[e._v("pipeline")]),e._v("支持批量执行不同命令。")]),e._v(" "),i("p",[e._v("原生批量命令是服务器段实现，而"),i("code",[e._v("pipeline")]),e._v("需要服务端与客户端共同完成。")])]),e._v(" "),i("h3",{attrs:{id:"_6-4-pipeline与事务对比"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-pipeline与事务对比"}},[e._v("#")]),e._v(" 6.4 pipeline与事务对比")]),e._v(" "),i("blockquote",[i("p",[e._v("事务具有原子性，管道不具有原子性。")]),e._v(" "),i("p",[e._v("管道一次性将多条命令发送到服务器，事务是一条一条的发，事务只有在接收到"),i("code",[e._v("exec")]),e._v("命令后才会执行，管道不会。")]),e._v(" "),i("p",[e._v("执行事务时会阻塞其他命令的执行，而执行管道中的命令时不会。")])]),e._v(" "),i("h3",{attrs:{id:"_6-5-使用pipeline注意事项"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-使用pipeline注意事项"}},[e._v("#")]),e._v(" 6.5 使用pipeline注意事项")]),e._v(" "),i("blockquote",[i("p",[i("code",[e._v("pipeline")]),e._v("缓冲的指令只是会依次执行，不保证原子性，如果执行中指令发生异常，将会继续执行后续的命令。")]),e._v(" "),i("p",[e._v("使用pipeline组装的命令个数不能太多，不然数据量过大客户端阻塞的时间可能过久，同时服务端此时也被迫回复一个队列答复，占用很多内存。")])])])}),[],!1,null,null,null);t.default=v.exports},596:function(e,t,_){e.exports=_.p+"assets/img/image-20230424181840056.70c0dbef.png"}}]);